:PROPERTIES:
:ID:       793A511C-4210-4414-BD0A-51700F4157C2
:ROAM_REFS: https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations/
:END:
#+TITLE: Leetcode: 2442. Count Number of Distinct Integers After Reverse Operations
#+ROAM_REFS: https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations/
#+LEETCODE_LEVEL: Medium
#+ANKI_DECK: Problem Solving
#+ANKI_CARD_ID: 1665977074351

* Understand the problem

Given an array $a$, find the number of distinct elements on $b$ where $b$ contains elements of $a$ and for each $x$ in $a$, it also contains the number generated by reversing the digits of $x$.

** Useful prompts

- [[id:29512D97-A54D-42F9-A8C7-C3422881933B][Can we use brute-force to solve the problem?]]

* Devise a plan

[[id:BC81A358-FBCC-43AA-9928-E9778A107869][Pattern: Small constraints could allow a brute-force solution]], so generate $b$ and return its size.  Time complexity and space are $O(n)$.

** Carry out the plan

#+begin_src python
  class Solution:
      def countDistinctIntegers(self, nums: List[int]) -> int:
          seen = set(nums)
          for n in nums:
              seen.add(int(str(n)[::-1]))
          return len(seen)
#+end_src
