:PROPERTIES:
:ID:       1C032394-9D5B-4A8C-8ACE-21ED5B0B4838
:END:
#+TITLE: Merge Two Sorted Arrays

Given two sorted arrays $a$ and $b$, return a sorted array that has the same elements from $a$ and $b$.  The optimal solution uses the fact that $a$ and $b$ are sorted.  If $a[0]<b[0]$, we know that the result array will have $a[0]$ as first element.  Otherwise, we know that $b[0]$ is for sure a correct choice.  We can apply the same process to select the next element from the result array.

- Time complexity: $O(|a|+|b|)$
- Space complexity: $O(|a|+|b|)$

#+begin_src python
  def merge_sorted_arrays(a, b):
    ans = []
    i, j = 0, 0
    while i < len(a) and j < len(b):
        if a[i] < b[j]:
            ans.append(a[i])
            i += 1
        else:
            ans.append(b[j])
            j += 1
    if i < len(a):
        ans = ans + a[i:]
    if j < len(b):
        ans = ans + b[j:]
    return ans

  assert merge_sorted_arrays([1, 3, 5], [2, 4, 6]) == [1, 2, 3, 4, 5, 6]
  assert merge_sorted_arrays([1, 3, 5], []) == [1, 3, 5]
  assert merge_sorted_arrays([], [1, 3, 5]) == [1, 3, 5]
#+end_src
