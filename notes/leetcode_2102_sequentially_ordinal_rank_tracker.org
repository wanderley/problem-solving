:PROPERTIES:
:ID:       9259B33E-5B91-4B13-9573-1A8D6DA38FF0
:ROAM_REFS: https://leetcode.com/problems/sequentially-ordinal-rank-tracker/
:END:
#+TITLE: Leetcode: 2102. Sequentially Ordinal Rank Tracker
#+ROAM_REFS: https://leetcode.com/problems/sequentially-ordinal-rank-tracker/
#+LEETCODE_LEVEL: Hard
#+ANKI_DECK: Problem Solving

- [[id:42B21DBC-4951-4AF2-8C41-A646F5675365][Can we pre-process the input in a way to make easy to solve the problem?]]  Keep the input sorted by score and name.  Time complexity is $O(n \log n)$ and space is $O(n)$.

#+begin_src python
  from sortedcontainers import SortedList


  class SORTracker:
      def __init__(self):
          self.loc = SortedList()
          self.q = 0

      def add(self, name: str, score: int) -> None:
          self.loc.add((-score, name))

      def get(self) -> str:
          ans = self.loc[self.q][1]
          self.q += 1
          return ans


  # Your SORTracker object will be instantiated and called as such:
  # obj = SORTracker()
  # obj.add(name,score)
  # param_2 = obj.get()
#+end_src
