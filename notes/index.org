:PROPERTIES:
:ID:       8B3C6E28-3ACB-47BB-B6B0-E1A0F35719A0
:END:
#+TITLE: Home

Welcome to my problem solving notes!

Long time ago, I participated on the [[http://maratona.sbc.org.br/][ACM ICPC South America/Brazil regional]].  My average results on the competitions didn't stop my passion on the area.  From 2007 to 2010, I coached teams from [[https://www.ime.usp.br/~maratona/usp_historia][Universidade de São Paulo]] to compete on ACM ICPC.  I met so many bright people and made friends for life.  At the same time, I trained high-school students to compete in [[https://olimpiada.ic.unicamp.br/][Olimpíada Brasileira de Informática]] and those classified to the [[https://ioinformatics.org/][International Olympiad in Informatics]].  Again, I met an incredible amount of intelligent and hard-working kids that dedicated hours and hours of their days to become better at problem solving.  This time with all these folks will always have a special place in my heart.

As I moved to my next "thing", I took a break (of almost 10 years) from competitive programming.  I decided to come back and solve few problems in late 2022.  Ouch!  Time wasn't gentile with my skills.  I found that I couldn't solve problems that once was easy, and I was slow not only to find solution but code them.  If there is one thing that I know about competitive programming, it is that these skill don't come in a day and you have to grind!

There are tons of resource online to study and practice.  The number of problems increased considerably as the number of editorials and solutions.  But the core problem continues the same: /how can someone use these resource to improve their problem solving skills?/  With these notes, I want to give a try to answer this question.  I will experiment different methods and strategies to hopefully find the one that could be used by those who don't have opportunity to work with a coach.  If I get there or not, time will say.  Until there, welcome to the journey.

* Method

This is a work in-progress which you can follow on [[id:B38C0682-EB89-466F-9645-E89A055D3D99][Method]].

* Coding Interviews

In the first phase of the project, I will focus on coding interview problems and more specially for [[https://leetcode.com/][Leetcode]] problems.  Compared with coding competitions' problems, they are easier to solve and require knowledge of smaller number of topics.  By the other hand, they have better problem statements and the number of sub-problems is at most two (e.g. transform problem in X and run algorithm Y on it).

Here is a list of few experiments:

- [[id:8C7E9E52-9220-4A7B-B0E6-54F960E17CA8][Interview preparation: V]]

* Competitive Programming

After I get the method established in Coding Interviews world, I extend it to cover competitive programming.  It will take a while, so take a sit otherwise you will be tired.
