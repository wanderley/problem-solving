:PROPERTIES:
:ID:       6E0C3215-99C9-482D-8F2A-6C227CCFBB6C
:ROAM_REFS: https://leetcode.com/problems/minimum-addition-to-make-integer-beautiful/submissions/
:END:
#+TITLE: Leetcode: 2457. Minimum Addition to Make Integer Beautiful
#+ROAM_REFS: https://leetcode.com/problems/minimum-addition-to-make-integer-beautiful/submissions/
#+LEETCODE_LEVEL: Medium
#+ANKI_DECK: Problem Solving
#+ANKI_CARD_ID: 1667199605671


* Understand the problem

Given two integers $n$ and $t$, find the smallest $x$ which sum of digits of $n + x$ is at most $t$.

* Solution

/Best explanation I have so far/:  [[id:BA632D61-93B6-47AB-B11A-7E9EBE3FC71D][Can we derive an invariant based on the smallest possible examples?]]  We construct $x$ from right to left, by making sure that $x_0+n_0=x_1+n_1=...=10$.  So, we always minimize the difference of $d(n+x)$ and $t$ for each number.

#+begin_src python
  class Solution:
      def makeIntegerBeautiful(self, n: int, target: int) -> int:
          c = n
          p = 10
          while sum(map(int, str(c))) > target:
              c = (c // p + 1) * p
              p = p * 10
          return c - n
#+end_src
